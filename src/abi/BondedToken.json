{
    "fileName": "BondedToken.sol",
    "contractName": "BondedToken",
    "source": "pragma solidity ^0.5.7;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\";\nimport \"contracts/BondingCurve/dividend/RewardsDistributor.sol\";\nimport \"contracts/BondingCurve/token/BondedTokenBase.sol\";\nimport \"contracts/BondingCurve/interface/IBondedToken.sol\";\n\n/**\n * @title Dividend Token\n * @dev A standard ERC20, using Detailed & Mintable featurs. Accepts a single minter, which should be the BondingCurve. The minter also has exclusive burning rights.\n */\ncontract BondedToken is Initializable, BondedTokenBase {\n    IERC20 _dividendToken;\n\n    /// @dev Initialize contract\n    /// @param name ERC20 token name\n    /// @param symbol ERC20 token symbol\n    /// @param decimals ERC20 token decimals\n    /// @param minter Address to give exclusive minting and burning rights for token\n    /// @param rewardsDistributor Instance for managing dividend accounting.\n    /// @param dividendToken Instance of ERC20 in which dividends are paid.\n    function initialize(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        address minter,\n        address initialHolder,\n        uint256 initialSupply,\n        RewardsDistributor rewardsDistributor,\n        IERC20 dividendToken\n    ) public initializer {\n        BondedTokenBase.initialize(\n            name,\n            symbol,\n            decimals,\n            minter,\n            initialHolder,\n            initialSupply,\n            rewardsDistributor\n        );\n        // TODO: uncomment below line once this contract is no longer used as PaymentToken in tests.\n        // require(address(dividendToken) != address(0), \"No dividend ERC20 contract provided.\");\n        _dividendToken = dividendToken;\n    }\n\n    function _validateComponentAddresses() internal returns (bool) {\n        if (address(_rewardsDistributor) == address(0)) {\n            return false;\n        }\n\n        if (address(_dividendToken) == address(0)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Withdraw accumulated reward for the sender address.\n     */\n    function withdrawReward() public returns (uint256) {\n        if (!_validateComponentAddresses()) {\n            return 0;\n        }\n        address payable _staker = msg.sender;\n        uint256 _amount = _rewardsDistributor.withdrawReward(_staker);\n        _dividendToken.transfer(_staker, _amount);\n        return _amount;\n    }\n\n    /**\n     * Claim and allocate provided dividend tokens to all balances greater than ELIGIBLE_UNIT.\n     */\n    function distribute(address from, uint256 value) public payable returns (bool) {\n        require(msg.value == 0);\n\n        if (!_validateComponentAddresses()) {\n            return false;\n        }\n\n        if (value == 0) {\n            return false;\n        }\n\n        require(\n            _dividendToken.transferFrom(from, address(this), value),\n            \"Dividend TransferFrom Failed.\"\n        );\n\n        _rewardsDistributor.distribute(from, value);\n\n        return true;\n    }\n\n}\n",
    "sourcePath": "contracts/BondingCurve/token/BondedToken.sol",
    "sourceMap": "553:2530:44:-;;;;;;;;;",
    "deployedSourceMap": "553:2530:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:81:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;723:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;723:81:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2847:147:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2847:147:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2847:147:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;481:182:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;481:182:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;481:182:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;481:182:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;481:182:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;481:182:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;481:182:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;481:182:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;481:182:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;481:182:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;481:182:9;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1037:89:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1037:89:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3457:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3457:231:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3457:231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1025:81:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1025:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4205:207:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4205:207:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4205:207:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2162:262:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2162:262:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2162:262:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1338:104:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1338:104:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1338:104:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;866:85:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;866:85:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;866:85:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;756:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;852:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;852:77:2;;;:::i;:::-;;1690:225:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1690:225:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1690:225:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4934:217:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4934:217:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4934:217:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2072:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:139:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:139:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;643:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3088:223:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3088:223:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3088:223:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;278:101:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:101:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;278:101:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;2152:328:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2152:328:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1773:132:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:132:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1773:132:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1057:510:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1057:510:45;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1057:510:45;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1057:510:45;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1057:510:45;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1057:510:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1057:510:45;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1057:510:45;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1057:510:45;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1057:510:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1057:510:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1036:748:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1036:748:44;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1036:748:44;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1036:748:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1036:748:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1036:748:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1036:748:44;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1036:748:44;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1036:748:44;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1036:748:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1036:748:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2597:483;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2597:483:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;723:81:9;760:13;792:5;785:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:81;:::o;2847:147:8:-;2912:4;2928:38;2937:12;:10;:12::i;:::-;2951:7;2960:5;2928:8;:38::i;:::-;2983:4;2976:11;;2847:147;;;;:::o;481:182:9:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;596:4:9;588:5;:12;;;;;;;;;;;;:::i;:::-;;620:6;610:7;:16;;;;;;;;;;;;:::i;:::-;;648:8;636:9;;:20;;;;;;;;;;;;;;;;;;1268:14:16;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;481:182:9;;;;:::o;1037:89:8:-;1081:7;1107:12;;1100:19;;1037:89;:::o;3457:231::-;3536:4;3552:26;3562:4;3568:2;3572:5;3552:9;:26::i;:::-;3588:72;3597:4;3603:12;:10;:12::i;:::-;3617:42;3653:5;3617:11;:17;3629:4;3617:17;;;;;;;;;;;;;;;:31;3635:12;:10;:12::i;:::-;3617:31;;;;;;;;;;;;;;;;:35;;:42;;;;:::i;:::-;3588:8;:72::i;:::-;3677:4;3670:11;;3457:231;;;;;:::o;1025:81:9:-;1066:5;1090:9;;;;;;;;;;;1083:16;;1025:81;:::o;4205:207:8:-;4285:4;4301:83;4310:12;:10;:12::i;:::-;4324:7;4333:50;4372:10;4333:11;:25;4345:12;:10;:12::i;:::-;4333:25;;;;;;;;;;;;;;;:34;4359:7;4333:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4301:8;:83::i;:::-;4401:4;4394:11;;4205:207;;;;:::o;2162:262:45:-;2230:4;544:22:2;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2246:29:45;2265:2;2269:5;2246:18;:29::i;:::-;;2330:1;2290:42;;2298:19;;;;;;;;;;;2290:42;;;2286:111;;2348:19;;;;;;;;;;;:27;;;2376:2;2380:5;2348:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:38:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2348:38:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2348:38:45;;;;;;;;;;;;;;;;;2286:111;2413:4;2406:11;;2162:262;;;;:::o;1338:104:8:-;1393:7;1419:9;:16;1429:5;1419:16;;;;;;;;;;;;;;;;1412:23;;1338:104;;;:::o;866:85:9:-;905:13;937:7;930:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:85;:::o;756:90:2:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1690:225:45:-;544:22:2;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1761:18:45;1767:4;1773:5;1761;:18::i;:::-;1834:1;1794:42;;1802:19;;;;;;;;;;;1794:42;;;1790:119;;1852:19;;;;;;;;;;;:33;;;1886:4;1892:5;1852:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1852:46:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1852:46:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1852:46:45;;;;;;;;;;;;;;;;;1790:119;1690:225;;:::o;4934:217:8:-;5019:4;5035:88;5044:12;:10;:12::i;:::-;5058:7;5067:55;5106:15;5067:11;:25;5079:12;:10;:12::i;:::-;5067:25;;;;;;;;;;;;;;;:34;5093:7;5067:34;;;;;;;;;;;;;;;;:38;;:55;;;;:::i;:::-;5035:8;:88::i;:::-;5140:4;5133:11;;4934:217;;;;:::o;2072:139::-;2133:4;2149:34;2159:12;:10;:12::i;:::-;2173:2;2177:5;2149:9;:34::i;:::-;2200:4;2193:11;;2072:139;;;;:::o;643:107:2:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;3088:223:45:-;3144:14;3214:1;3174:42;;3182:19;;;;;;;;;;;3174:42;;;3170:81;;;3239:1;3232:8;;;;3170:81;3267:19;;;;;;;;;;;:29;;;3297:6;3267:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3267:37:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3267:37:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3267:37:45;;;;;;;;;;;;;;;;3260:44;;3088:223;;;;:::o;278:101:10:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;343:29:10;365:6;343:21;:29::i;:::-;1268:14:16;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;278:101:10;;:::o;2152:328:44:-;2194:7;2218:29;:27;:29::i;:::-;2213:69;;2270:1;2263:8;;;;2213:69;2291:23;2317:10;2291:36;;2337:15;2355:19;;;;;;;;;;;:34;;;2390:7;2355:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2355:43:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2355:43:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2355:43:44;;;;;;;;;;;;;;;;2337:61;;2408:14;;;;;;;;;;;:23;;;2432:7;2441;2408:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2408:41:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2408:41:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:41:44;;;;;;;;;;;;;;;;;2466:7;2459:14;;;;2152:328;;:::o;1773:132:8:-;1845:7;1871:11;:18;1883:5;1871:18;;;;;;;;;;;;;;;:27;1890:7;1871:27;;;;;;;;;;;;;;;;1864:34;;1773:132;;;;:::o;1057:510:45:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1327:48:45;1352:4;1358:6;1366:8;1327:24;:48::i;:::-;1385:32;1410:6;1385:24;:32::i;:::-;1449:18;1427:19;;:40;;;;;;;;;;;;;;;;;;1498:1;1482:13;:17;1478:83;;;1515:35;1521:13;1536;1515:5;:35::i;:::-;1478:83;1268:14:16;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1057:510:45;;;;;;;;:::o;1036:748:44:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1336:202:44;1376:4;1394:6;1414:8;1436:6;1456:13;1483;1510:18;1336:26;:202::i;:::-;1764:13;1747:14;;:30;;;;;;;;;;;;;;;;;;1268:14:16;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1036:748:44;;;;;;;;;:::o;2597:483::-;2670:4;2707:1;2694:9;:14;2686:23;;;;;;2725:29;:27;:29::i;:::-;2720:73;;2777:5;2770:12;;;;2720:73;2816:1;2807:5;:10;2803:53;;;2840:5;2833:12;;;;2803:53;2887:14;;;;;;;;;;;:27;;;2915:4;2929;2936:5;2887:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2887:55:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2887:55:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2887:55:44;;;;;;;;;;;;;;;;2866:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3008:19;;;;;;;;;;;:30;;;3039:4;3045:5;3008:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3008:43:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3008:43:44;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3008:43:44;;;;;;;;;;;;;;;;;3069:4;3062:11;;2597:483;;;;;:::o;791:88:0:-;836:7;862:10;855:17;;791:88;:::o;6986:251:8:-;7097:1;7078:21;;:7;:21;;;;7070:30;;;;;;7135:1;7118:19;;:5;:19;;;;7110:28;;;;;;7179:5;7149:11;:18;7161:5;7149:18;;;;;;;;;;;;;;;:27;7168:7;7149:27;;;;;;;;;;;;;;;:35;;;;7215:7;7199:31;;7208:5;7199:31;;;7224:5;7199:31;;;;;;;;;;;;;;;;;;6986:251;;;:::o;1409:467:16:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2643:299:45:-;2722:32;2738:4;2744:2;2748:5;2722:15;:32::i;:::-;2809:1;2769:42;;2777:19;;;;;;;;;;;2769:42;;;2765:171;;2827:19;;;;;;;;;;;:33;;;2861:4;2867:5;2827:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2827:46:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2827:46:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2827:46:45;;;;;;;;;;;;;;;;;2887:19;;;;;;;;;;;:27;;;2915:2;2919:5;2887:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2887:38:45;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2887:38:45;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2887:38:45;;;;;;;;;;;;;;;;;2765:171;2643:299;;;:::o;1211:145:6:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;1439:::-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;626:128:10:-;694:4;544:22:2;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:16:10;716:2;720:5;710;:16::i;:::-;743:4;736:11;;626:128;;;;:::o;935:119:2:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;1060:127::-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;6458:263:8:-;6551:1;6532:21;;:7;:21;;;;6524:30;;;;;;6580:23;6597:5;6580:12;;:16;;:23;;;;:::i;:::-;6565:12;:38;;;;6634:29;6657:5;6634:9;:18;6644:7;6634:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6613:9;:18;6623:7;6613:18;;;;;;;;;;;;;;;:50;;;;6704:1;6678:36;;6687:7;6678:36;;;6708:5;6678:36;;;;;;;;;;;;;;;;;;6458:263;;:::o;786:162:1:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;361:137:2:-;1024:12:16;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:2;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:16;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:2;;:::o;1790:276:44:-;1847:4;1907:1;1867:42;;1875:19;;;;;;;;;;;1867:42;;;1863:85;;;1932:5;1925:12;;;;1863:85;1997:1;1962:37;;1970:14;;;;;;;;;;;1962:37;;;1958:80;;;2022:5;2015:12;;;;1958:80;2055:4;2048:11;;1790:276;;:::o;5969:263:8:-;6062:1;6043:21;;:7;:21;;;;6035:30;;;;;;6091:23;6108:5;6091:12;;:16;;:23;;;;:::i;:::-;6076:12;:38;;;;6145:29;6168:5;6145:9;:18;6155:7;6145:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6124:9;:18;6134:7;6124:18;;;;;;;;;;;;;;;:50;;;;6210:7;6189:36;;6206:1;6189:36;;;6219:5;6189:36;;;;;;;;;;;;;;;;;;5969:263;;:::o;5370:256::-;5471:1;5457:16;;:2;:16;;;;5449:25;;;;;;5503:26;5523:5;5503:9;:15;5513:4;5503:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5485:9;:15;5495:4;5485:15;;;;;;;;;;;;;;;:44;;;;5555:24;5573:5;5555:9;:13;5565:2;5555:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5539:9;:13;5549:2;5539:13;;;;;;;;;;;;;;;:40;;;;5609:2;5594:25;;5603:4;5594:25;;;5613:5;5594:25;;;;;;;;;;;;;;;;;;5370:256;;;:::o;259:181:1:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;553:2530:44:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [{ "name": "", "type": "string" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "spender", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "approve",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "name", "type": "string" },
                { "name": "symbol", "type": "string" },
                { "name": "decimals", "type": "uint8" }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [{ "name": "", "type": "uint256" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "from", "type": "address" },
                { "name": "to", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "transferFrom",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [{ "name": "", "type": "uint8" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "spender", "type": "address" },
                { "name": "addedValue", "type": "uint256" }
            ],
            "name": "increaseAllowance",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "to", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "mint",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [{ "name": "owner", "type": "address" }],
            "name": "balanceOf",
            "outputs": [{ "name": "", "type": "uint256" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [{ "name": "", "type": "string" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [{ "name": "account", "type": "address" }],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "from", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "burn",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "spender", "type": "address" },
                { "name": "subtractedValue", "type": "uint256" }
            ],
            "name": "decreaseAllowance",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "to", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [{ "name": "account", "type": "address" }],
            "name": "isMinter",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [{ "name": "staker", "type": "address" }],
            "name": "getReward",
            "outputs": [{ "name": "tokens", "type": "uint256" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [{ "name": "sender", "type": "address" }],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "withdrawReward",
            "outputs": [{ "name": "", "type": "uint256" }],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                { "name": "owner", "type": "address" },
                { "name": "spender", "type": "address" }
            ],
            "name": "allowance",
            "outputs": [{ "name": "", "type": "uint256" }],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "name", "type": "string" },
                { "name": "symbol", "type": "string" },
                { "name": "decimals", "type": "uint8" },
                { "name": "minter", "type": "address" },
                { "name": "initialHolder", "type": "address" },
                { "name": "initialSupply", "type": "uint256" },
                { "name": "rewardsDistributor", "type": "address" }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "name", "type": "string" },
                { "name": "symbol", "type": "string" },
                { "name": "decimals", "type": "uint8" },
                { "name": "minter", "type": "address" },
                { "name": "initialHolder", "type": "address" },
                { "name": "initialSupply", "type": "uint256" },
                { "name": "rewardsDistributor", "type": "address" },
                { "name": "dividendToken", "type": "address" }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                { "name": "from", "type": "address" },
                { "name": "value", "type": "uint256" }
            ],
            "name": "distribute",
            "outputs": [{ "name": "", "type": "bool" }],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                { "indexed": true, "name": "account", "type": "address" }
            ],
            "name": "MinterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                { "indexed": true, "name": "account", "type": "address" }
            ],
            "name": "MinterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                { "indexed": true, "name": "from", "type": "address" },
                { "indexed": true, "name": "to", "type": "address" },
                { "indexed": false, "name": "value", "type": "uint256" }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                { "indexed": true, "name": "owner", "type": "address" },
                { "indexed": true, "name": "spender", "type": "address" },
                { "indexed": false, "name": "value", "type": "uint256" }
            ],
            "name": "Approval",
            "type": "event"
        }
    ],
    "ast": {
        "absolutePath": "contracts/BondingCurve/token/BondedToken.sol",
        "exportedSymbols": { "BondedToken": [8051] },
        "id": 8052,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 7885,
                "literals": ["solidity", "^", "0.5", ".7"],
                "nodeType": "PragmaDirective",
                "src": "0:23:44"
            },
            {
                "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
                "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
                "id": 7886,
                "nodeType": "ImportDirective",
                "scope": 8052,
                "sourceUnit": 1995,
                "src": "25:60:44",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
                "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
                "id": 7887,
                "nodeType": "ImportDirective",
                "scope": 8052,
                "sourceUnit": 1182,
                "src": "86:82:44",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/BondingCurve/dividend/RewardsDistributor.sol",
                "file": "contracts/BondingCurve/dividend/RewardsDistributor.sol",
                "id": 7888,
                "nodeType": "ImportDirective",
                "scope": 8052,
                "sourceUnit": 7005,
                "src": "169:64:44",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/BondingCurve/token/BondedTokenBase.sol",
                "file": "contracts/BondingCurve/token/BondedTokenBase.sol",
                "id": 7889,
                "nodeType": "ImportDirective",
                "scope": 8052,
                "sourceUnit": 8249,
                "src": "234:58:44",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/BondingCurve/interface/IBondedToken.sol",
                "file": "contracts/BondingCurve/interface/IBondedToken.sol",
                "id": 7890,
                "nodeType": "ImportDirective",
                "scope": 8052,
                "sourceUnit": 7787,
                "src": "293:59:44",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 7891,
                            "name": "Initializable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1994,
                            "src": "577:13:44",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$1994",
                                "typeString": "contract Initializable"
                            }
                        },
                        "id": 7892,
                        "nodeType": "InheritanceSpecifier",
                        "src": "577:13:44"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 7893,
                            "name": "BondedTokenBase",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 8248,
                            "src": "592:15:44",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondedTokenBase_$8248",
                                "typeString": "contract BondedTokenBase"
                            }
                        },
                        "id": 7894,
                        "nodeType": "InheritanceSpecifier",
                        "src": "592:15:44"
                    }
                ],
                "contractDependencies": [
                    26,
                    243,
                    1181,
                    1248,
                    1297,
                    1489,
                    1994,
                    8248
                ],
                "contractKind": "contract",
                "documentation": "@title Dividend Token\n@dev A standard ERC20, using Detailed & Mintable featurs. Accepts a single minter, which should be the BondingCurve. The minter also has exclusive burning rights.",
                "fullyImplemented": true,
                "id": 8051,
                "linearizedBaseContracts": [
                    8051,
                    8248,
                    1297,
                    243,
                    1181,
                    1248,
                    1489,
                    26,
                    1994
                ],
                "name": "BondedToken",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 7896,
                        "name": "_dividendToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 8051,
                        "src": "614:21:44",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1489",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "contractScope": null,
                            "id": 7895,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1489,
                            "src": "614:6:44",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1489",
                                "typeString": "contract IERC20"
                            }
                        },
                        "value": null,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 7933,
                            "nodeType": "Block",
                            "src": "1326:458:44",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7920,
                                                "name": "name",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7898,
                                                "src": "1376:4:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7921,
                                                "name": "symbol",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7900,
                                                "src": "1394:6:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7922,
                                                "name": "decimals",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7902,
                                                "src": "1414:8:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7923,
                                                "name": "minter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7904,
                                                "src": "1436:6:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7924,
                                                "name": "initialHolder",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7906,
                                                "src": "1456:13:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7925,
                                                "name": "initialSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7908,
                                                "src": "1483:13:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7926,
                                                "name": "rewardsDistributor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7910,
                                                "src": "1510:18:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                    "typeString": "contract RewardsDistributor"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                    "typeString": "contract RewardsDistributor"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7917,
                                                "name": "BondedTokenBase",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8248,
                                                "src": "1336:15:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_BondedTokenBase_$8248_$",
                                                    "typeString": "type(contract BondedTokenBase)"
                                                }
                                            },
                                            "id": 7919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8114,
                                            "src": "1336:26:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_address_$_t_address_$_t_uint256_$_t_contract$_RewardsDistributor_$7004_$returns$__$",
                                                "typeString": "function (string memory,string memory,uint8,address,address,uint256,contract RewardsDistributor)"
                                            }
                                        },
                                        "id": 7927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1336:202:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 7928,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1336:202:44"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 7931,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 7929,
                                            "name": "_dividendToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7896,
                                            "src": "1747:14:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1489",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 7930,
                                            "name": "dividendToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7912,
                                            "src": "1764:13:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1489",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "1747:30:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1489",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 7932,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1747:30:44"
                                }
                            ]
                        },
                        "documentation": "@dev Initialize contract\n @param name ERC20 token name\n @param symbol ERC20 token symbol\n @param decimals ERC20 token decimals\n @param minter Address to give exclusive minting and burning rights for token\n @param rewardsDistributor Instance for managing dividend accounting.\n @param dividendToken Instance of ERC20 in which dividends are paid.",
                        "id": 7934,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 7915,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 7914,
                                    "name": "initializer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1975,
                                    "src": "1314:11:44",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1314:11:44"
                            }
                        ],
                        "name": "initialize",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7913,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7898,
                                    "name": "name",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1065:18:44",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7897,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1065:6:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7900,
                                    "name": "symbol",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1093:20:44",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 7899,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1093:6:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7902,
                                    "name": "decimals",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1123:14:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 7901,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1123:5:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7904,
                                    "name": "minter",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1147:14:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7903,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1147:7:44",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7906,
                                    "name": "initialHolder",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1171:21:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7905,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1171:7:44",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7908,
                                    "name": "initialSupply",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1202:21:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7907,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1202:7:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7910,
                                    "name": "rewardsDistributor",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1233:37:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                        "typeString": "contract RewardsDistributor"
                                    },
                                    "typeName": {
                                        "contractScope": null,
                                        "id": 7909,
                                        "name": "RewardsDistributor",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 7004,
                                        "src": "1233:18:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                            "typeString": "contract RewardsDistributor"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 7912,
                                    "name": "dividendToken",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7934,
                                    "src": "1280:20:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1489",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "contractScope": null,
                                        "id": 7911,
                                        "name": "IERC20",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 1489,
                                        "src": "1280:6:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1489",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1055:251:44"
                        },
                        "returnParameters": {
                            "id": 7916,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1326:0:44"
                        },
                        "scope": 8051,
                        "src": "1036:748:44",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 7963,
                            "nodeType": "Block",
                            "src": "1853:213:44",
                            "statements": [
                                {
                                    "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 7945,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "id": 7940,
                                                    "name": "_rewardsDistributor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8066,
                                                    "src": "1875:19:44",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                        "typeString": "contract RewardsDistributor"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                        "typeString": "contract RewardsDistributor"
                                                    }
                                                ],
                                                "id": 7939,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1867:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                            },
                                            "id": 7941,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1867:28:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 7943,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1907:1:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 7942,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1899:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                            },
                                            "id": 7944,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1899:10:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "1867:42:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": null,
                                    "id": 7949,
                                    "nodeType": "IfStatement",
                                    "src": "1863:85:44",
                                    "trueBody": {
                                        "id": 7948,
                                        "nodeType": "Block",
                                        "src": "1911:37:44",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 7946,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1932:5:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "functionReturnParameters": 7938,
                                                "id": 7947,
                                                "nodeType": "Return",
                                                "src": "1925:12:44"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 7956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "id": 7951,
                                                    "name": "_dividendToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7896,
                                                    "src": "1970:14:44",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$1489",
                                                        "typeString": "contract IERC20"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_IERC20_$1489",
                                                        "typeString": "contract IERC20"
                                                    }
                                                ],
                                                "id": 7950,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1962:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                            },
                                            "id": 7952,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1962:23:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                                {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 7954,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1997:1:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 7953,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1989:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                            },
                                            "id": 7955,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1989:10:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "1962:37:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": null,
                                    "id": 7960,
                                    "nodeType": "IfStatement",
                                    "src": "1958:80:44",
                                    "trueBody": {
                                        "id": 7959,
                                        "nodeType": "Block",
                                        "src": "2001:37:44",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 7957,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2022:5:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "functionReturnParameters": 7938,
                                                "id": 7958,
                                                "nodeType": "Return",
                                                "src": "2015:12:44"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 7961,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2055:4:44",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 7938,
                                    "id": 7962,
                                    "nodeType": "Return",
                                    "src": "2048:11:44"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 7964,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_validateComponentAddresses",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7935,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1826:2:44"
                        },
                        "returnParameters": {
                            "id": 7938,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7937,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7964,
                                    "src": "1847:4:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 7936,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1847:4:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1846:6:44"
                        },
                        "scope": 8051,
                        "src": "1790:276:44",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 7997,
                            "nodeType": "Block",
                            "src": "2203:277:44",
                            "statements": [
                                {
                                    "condition": {
                                        "argumentTypes": null,
                                        "id": 7971,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "2217:30:44",
                                        "subExpression": {
                                            "argumentTypes": null,
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 7969,
                                                "name": "_validateComponentAddresses",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7964,
                                                "src": "2218:27:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                                                    "typeString": "function () returns (bool)"
                                                }
                                            },
                                            "id": 7970,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2218:29:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": null,
                                    "id": 7975,
                                    "nodeType": "IfStatement",
                                    "src": "2213:69:44",
                                    "trueBody": {
                                        "id": 7974,
                                        "nodeType": "Block",
                                        "src": "2249:33:44",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 7972,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2270:1:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "functionReturnParameters": 7968,
                                                "id": 7973,
                                                "nodeType": "Return",
                                                "src": "2263:8:44"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [7977],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 7977,
                                            "name": "_staker",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 7997,
                                            "src": "2291:23:44",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 7976,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2291:15:44",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 7980,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 7978,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8371,
                                            "src": "2317:3:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 7979,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "2317:10:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2291:36:44"
                                },
                                {
                                    "assignments": [7982],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 7982,
                                            "name": "_amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 7997,
                                            "src": "2337:15:44",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 7981,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2337:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 7987,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7985,
                                                "name": "_staker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7977,
                                                "src": "2390:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7983,
                                                "name": "_rewardsDistributor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8066,
                                                "src": "2355:19:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                    "typeString": "contract RewardsDistributor"
                                                }
                                            },
                                            "id": 7984,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "withdrawReward",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6823,
                                            "src": "2355:34:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) external returns (uint256)"
                                            }
                                        },
                                        "id": 7986,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2355:43:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2337:61:44"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 7991,
                                                "name": "_staker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7977,
                                                "src": "2432:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 7992,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7982,
                                                "src": "2441:7:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 7988,
                                                "name": "_dividendToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7896,
                                                "src": "2408:14:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1489",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 7990,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1431,
                                            "src": "2408:23:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 7993,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2408:41:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 7994,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2408:41:44"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 7995,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7982,
                                        "src": "2466:7:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 7968,
                                    "id": 7996,
                                    "nodeType": "Return",
                                    "src": "2459:14:44"
                                }
                            ]
                        },
                        "documentation": "@dev Withdraw accumulated reward for the sender address.",
                        "id": 7998,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdrawReward",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7965,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2175:2:44"
                        },
                        "returnParameters": {
                            "id": 7968,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7967,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7998,
                                    "src": "2194:7:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7966,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2194:7:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2193:9:44"
                        },
                        "scope": 8051,
                        "src": "2152:328:44",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 8049,
                            "nodeType": "Block",
                            "src": "2676:404:44",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 8011,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 8008,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8371,
                                                        "src": "2694:3:44",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 8009,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "2694:9:44",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "30",
                                                    "id": 8010,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2707:1:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "2694:14:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 8007,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                8374,
                                                8375
                                            ],
                                            "referencedDeclaration": 8374,
                                            "src": "2686:7:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 8012,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2686:23:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 8013,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2686:23:44"
                                },
                                {
                                    "condition": {
                                        "argumentTypes": null,
                                        "id": 8016,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "2724:30:44",
                                        "subExpression": {
                                            "argumentTypes": null,
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 8014,
                                                "name": "_validateComponentAddresses",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7964,
                                                "src": "2725:27:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                                                    "typeString": "function () returns (bool)"
                                                }
                                            },
                                            "id": 8015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2725:29:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": null,
                                    "id": 8020,
                                    "nodeType": "IfStatement",
                                    "src": "2720:73:44",
                                    "trueBody": {
                                        "id": 8019,
                                        "nodeType": "Block",
                                        "src": "2756:37:44",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 8017,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2777:5:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "functionReturnParameters": 8006,
                                                "id": 8018,
                                                "nodeType": "Return",
                                                "src": "2770:12:44"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 8023,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 8021,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8002,
                                            "src": "2807:5:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 8022,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2816:1:44",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "2807:10:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": null,
                                    "id": 8027,
                                    "nodeType": "IfStatement",
                                    "src": "2803:53:44",
                                    "trueBody": {
                                        "id": 8026,
                                        "nodeType": "Block",
                                        "src": "2819:37:44",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 8024,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2840:5:44",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "functionReturnParameters": 8006,
                                                "id": 8025,
                                                "nodeType": "Return",
                                                "src": "2833:12:44"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 8031,
                                                        "name": "from",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8000,
                                                        "src": "2915:4:44",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                            {
                                                                "argumentTypes": null,
                                                                "id": 8033,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 8473,
                                                                "src": "2929:4:44",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_BondedToken_$8051",
                                                                    "typeString": "contract BondedToken"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_BondedToken_$8051",
                                                                    "typeString": "contract BondedToken"
                                                                }
                                                            ],
                                                            "id": 8032,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2921:7:44",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": "address"
                                                        },
                                                        "id": 8034,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2921:13:44",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 8035,
                                                        "name": "value",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8002,
                                                        "src": "2936:5:44",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 8029,
                                                        "name": "_dividendToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7896,
                                                        "src": "2887:14:44",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$1489",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 8030,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transferFrom",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1451,
                                                    "src": "2887:27:44",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                                    }
                                                },
                                                "id": 8036,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2887:55:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "4469766964656e64205472616e7366657246726f6d204661696c65642e",
                                                "id": 8037,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2956:31:44",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_fccf05b9e60f1a51b9bfcb602ab643d11d18e043f105cec07afaea21da9ff12c",
                                                    "typeString": "literal_string \"Dividend TransferFrom Failed.\""
                                                },
                                                "value": "Dividend TransferFrom Failed."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_fccf05b9e60f1a51b9bfcb602ab643d11d18e043f105cec07afaea21da9ff12c",
                                                    "typeString": "literal_string \"Dividend TransferFrom Failed.\""
                                                }
                                            ],
                                            "id": 8028,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                8374,
                                                8375
                                            ],
                                            "referencedDeclaration": 8375,
                                            "src": "2866:7:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 8038,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2866:131:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 8039,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2866:131:44"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 8043,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8000,
                                                "src": "3039:4:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 8044,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8002,
                                                "src": "3045:5:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 8040,
                                                "name": "_rewardsDistributor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8066,
                                                "src": "3008:19:44",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_RewardsDistributor_$7004",
                                                    "typeString": "contract RewardsDistributor"
                                                }
                                            },
                                            "id": 8042,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "distribute",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6786,
                                            "src": "3008:30:44",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 8045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3008:43:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 8046,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3008:43:44"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 8047,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3069:4:44",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 8006,
                                    "id": 8048,
                                    "nodeType": "Return",
                                    "src": "3062:11:44"
                                }
                            ]
                        },
                        "documentation": "Claim and allocate provided dividend tokens to all balances greater than ELIGIBLE_UNIT.",
                        "id": 8050,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "distribute",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 8003,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8000,
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 8050,
                                    "src": "2617:12:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 7999,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2617:7:44",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 8002,
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 8050,
                                    "src": "2631:13:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 8001,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2631:7:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2616:29:44"
                        },
                        "returnParameters": {
                            "id": 8006,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 8005,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 8050,
                                    "src": "2670:4:44",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 8004,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2670:4:44",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2669:6:44"
                        },
                        "scope": 8051,
                        "src": "2597:483:44",
                        "stateMutability": "payable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 8052,
                "src": "553:2530:44"
            }
        ],
        "src": "0:3084:44"
    },
    "bytecode": "0x608060405261305b806100136000396000f3fe6080604052600436106101405760003560e01c806398650275116100b6578063c4d66de81161006f578063c4d66de8146108f5578063c885bc5814610946578063dd62ed3e14610971578063f2810551146109f6578063fad1147714610bcc578063fb93210814610dc357610140565b806398650275146106cf5780639dc29fac146106e6578063a457c2d714610741578063a9059cbb146107b4578063aa271e1a14610827578063c00007b01461089057610140565b8063313ce56711610108578063313ce5671461047257806339509351146104a357806340c10f191461051657806370a082311461058957806395d89b41146105ee578063983b2d561461067e57610140565b806306fdde0314610145578063095ea7b3146101d55780631624f6c61461024857806318160ddd146103b457806323b872dd146103df575b600080fd5b34801561015157600080fd5b5061015a610e29565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e157600080fd5b5061022e600480360360408110156101f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ecb565b604051808215151515815260200191505060405180910390f35b34801561025457600080fd5b506103b26004803603606081101561026b57600080fd5b810190808035906020019064010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561031f57600080fd5b82018360208201111561033157600080fd5b8035906020019184600183028401116401000000008311171561035357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050610ee9565b005b3480156103c057600080fd5b506103c9611034565b6040518082815260200191505060405180910390f35b3480156103eb57600080fd5b506104586004803603606081101561040257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061103e565b604051808215151515815260200191505060405180910390f35b34801561047e57600080fd5b506104876110fd565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104af57600080fd5b506104fc600480360360408110156104c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611114565b604051808215151515815260200191505060405180910390f35b34801561052257600080fd5b5061056f6004803603604081101561053957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c7565b604051808215151515815260200191505060405180910390f35b34801561059557600080fd5b506105d8600480360360208110156105ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611381565b6040518082815260200191505060405180910390f35b3480156105fa57600080fd5b506106036113ca565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610643578082015181840152602081019050610628565b50505050905090810190601f1680156106705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068a57600080fd5b506106cd600480360360208110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061146c565b005b3480156106db57600080fd5b506106e46114dd565b005b3480156106f257600080fd5b5061073f6004803603604081101561070957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114ef565b005b34801561074d57600080fd5b5061079a6004803603604081101561076457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a0565b604051808215151515815260200191505060405180910390f35b3480156107c057600080fd5b5061080d600480360360408110156107d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611753565b604051808215151515815260200191505060405180910390f35b34801561083357600080fd5b506108766004803603602081101561084a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611771565b604051808215151515815260200191505060405180910390f35b34801561089c57600080fd5b506108df600480360360208110156108b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061178e565b6040518082815260200191505060405180910390f35b34801561090157600080fd5b506109446004803603602081101561091857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d3565b005b34801561095257600080fd5b5061095b6119dc565b6040518082815260200191505060405180910390f35b34801561097d57600080fd5b506109e06004803603604081101561099457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc8565b6040518082815260200191505060405180910390f35b348015610a0257600080fd5b50610bca600480360360e0811015610a1957600080fd5b8101908080359060200190640100000000811115610a3657600080fd5b820183602082011115610a4857600080fd5b80359060200191846001830284011164010000000083111715610a6a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610acd57600080fd5b820183602082011115610adf57600080fd5b80359060200191846001830284011164010000000083111715610b0157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4f565b005b348015610bd857600080fd5b50610dc16004803603610100811015610bf057600080fd5b8101908080359060200190640100000000811115610c0d57600080fd5b820183602082011115610c1f57600080fd5b80359060200191846001830284011164010000000083111715610c4157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ca457600080fd5b820183602082011115610cb657600080fd5b80359060200191846001830284011164010000000083111715610cd857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dbf565b005b610e0f60048036036040811015610dd957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f17565b604051808215151515815260200191505060405180910390f35b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b5050505050905090565b6000610edf610ed86121c8565b84846121d0565b6001905092915050565b600060019054906101000a900460ff1680610f085750610f0761232f565b5b80610f1f57506000809054906101000a900460ff16155b610f74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610fc4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190610fda929190612f23565b508260349080519060200190610ff1929190612f23565b5081603560006101000a81548160ff021916908360ff160217905550801561102e5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000606a54905090565b600061104b848484612340565b6110f2846110576121c8565b6110ed85606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006110a46121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b6121d0565b600190509392505050565b6000603560009054906101000a900460ff16905090565b60006111bd6111216121c8565b846111b885606960006111326121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b6121d0565b6001905092915050565b60006111d96111d46121c8565b611771565b61122e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b61123883836125b3565b50600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113775761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347e7ef2484846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561133a57600080fd5b505af115801561134e573d6000803e3d6000fd5b505050506040513d602081101561136457600080fd5b8101908080519060200190929190505050505b6001905092915050565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b5050505050905090565b61147c6114776121c8565b611771565b6114d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b6114da8161262e565b50565b6114ed6114e86121c8565b612688565b565b6114ff6114fa6121c8565b611771565b611554576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b61155e82826126e2565b600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461169c5761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c606627283836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561165f57600080fd5b505af1158015611673573d6000803e3d6000fd5b505050506040513d602081101561168957600080fd5b8101908080519060200190929190505050505b5050565b60006117496116ad6121c8565b8461174485606960006116be6121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b6121d0565b6001905092915050565b60006117676117606121c8565b8484612340565b6001905092915050565b600061178782609d61283690919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117f057600090506118ce565b61010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561189057600080fd5b505afa1580156118a4573d6000803e3d6000fd5b505050506040513d60208110156118ba57600080fd5b810190808051906020019092919050505090505b919050565b600060019054906101000a900460ff16806118f257506118f161232f565b5b8061190957506000809054906101000a900460ff16155b61195e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156119ae576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6119b7826128c8565b80156119d85760008060016101000a81548160ff0219169083151502179055505b5050565b60006119e66129df565b6119f35760009050611bc5565b6000339050600061010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b86e321c836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611a9c57600080fd5b505af1158015611ab0573d6000803e3d6000fd5b505050506040513d6020811015611ac657600080fd5b8101908080519060200190929190505050905061010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b8357600080fd5b505af1158015611b97573d6000803e3d6000fd5b505050506040513d6020811015611bad57600080fd5b81019080805190602001909291905050505080925050505b90565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060019054906101000a900460ff1680611c6e5750611c6d61232f565b5b80611c8557506000809054906101000a900460ff16155b611cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d2a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d35888888610ee9565b611d3e856118d3565b8161010260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000831115611d9457611d938484612aaa565b5b8015611db55760008060016101000a81548160ff0219169083151502179055505b5050505050505050565b600060019054906101000a900460ff1680611dde5750611ddd61232f565b5b80611df557506000809054906101000a900460ff16155b611e4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e9a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611ea989898989898989611c4f565b8161010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015611f0c5760008060016101000a81548160ff0219169083151502179055505b505050505050505050565b6000803414611f2557600080fd5b611f2d6129df565b611f3a57600090506121c2565b6000821415611f4c57600090506121c2565b61010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561202a57600080fd5b505af115801561203e573d6000803e3d6000fd5b505050506040513d602081101561205457600080fd5b81019080805190602001909291905050506120d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4469766964656e64205472616e7366657246726f6d204661696c65642e00000081525060200191505060405180910390fd5b61010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb93210884846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561218157600080fd5b505af1158015612195573d6000803e3d6000fd5b505050506040513d60208110156121ab57600080fd5b810190808051906020019092919050505050600190505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561220a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561224457600080fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b61234b838383612bfe565b600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461256f5761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c606627284836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561244c57600080fd5b505af1158015612460573d6000803e3d6000fd5b505050506040513d602081101561247657600080fd5b81019080805190602001909291905050505061010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347e7ef2483836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561253257600080fd5b505af1158015612546573d6000803e3d6000fd5b505050506040513d602081101561255c57600080fd5b8101908080519060200190929190505050505b505050565b60008282111561258357600080fd5b600082840390508091505092915050565b6000808284019050838110156125a957600080fd5b8091505092915050565b60006125c56125c06121c8565b611771565b61261a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b6126248383612aaa565b6001905092915050565b61264281609d612dcc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61269c81609d612e7890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561271c57600080fd5b61273181606a5461257490919063ffffffff16565b606a8190555061278981606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561287157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600060019054906101000a900460ff16806128e757506128e661232f565b5b806128fe57506000809054906101000a900460ff16155b612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156129a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6129ac82611771565b6129ba576129b98261262e565b5b80156129db5760008060016101000a81548160ff0219169083151502179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a415760009050612aa7565b600073ffffffffffffffffffffffffffffffffffffffff1661010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612aa25760009050612aa7565b600190505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ae457600080fd5b612af981606a5461259490919063ffffffff16565b606a81905550612b5181606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c3857600080fd5b612c8a81606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612d1f81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612e0657600080fd5b612e108282612836565b15612e1a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612eb257600080fd5b612ebc8282612836565b612ec557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f6457805160ff1916838001178555612f92565b82800160010185558215612f92579182015b82811115612f91578251825591602001919060010190612f76565b5b509050612f9f9190612fa3565b5090565b612fc591905b80821115612fc1576000816000905550600101612fa9565b5090565b9056fe4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72305820489ea2a63b8f41683243155679fe7acceb544bfc8e7eba9b1a92e1432b88ec1264736f6c634300050a0032",
    "deployedBytecode": "0x6080604052600436106101405760003560e01c806398650275116100b6578063c4d66de81161006f578063c4d66de8146108f5578063c885bc5814610946578063dd62ed3e14610971578063f2810551146109f6578063fad1147714610bcc578063fb93210814610dc357610140565b806398650275146106cf5780639dc29fac146106e6578063a457c2d714610741578063a9059cbb146107b4578063aa271e1a14610827578063c00007b01461089057610140565b8063313ce56711610108578063313ce5671461047257806339509351146104a357806340c10f191461051657806370a082311461058957806395d89b41146105ee578063983b2d561461067e57610140565b806306fdde0314610145578063095ea7b3146101d55780631624f6c61461024857806318160ddd146103b457806323b872dd146103df575b600080fd5b34801561015157600080fd5b5061015a610e29565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e157600080fd5b5061022e600480360360408110156101f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ecb565b604051808215151515815260200191505060405180910390f35b34801561025457600080fd5b506103b26004803603606081101561026b57600080fd5b810190808035906020019064010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561031f57600080fd5b82018360208201111561033157600080fd5b8035906020019184600183028401116401000000008311171561035357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050610ee9565b005b3480156103c057600080fd5b506103c9611034565b6040518082815260200191505060405180910390f35b3480156103eb57600080fd5b506104586004803603606081101561040257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061103e565b604051808215151515815260200191505060405180910390f35b34801561047e57600080fd5b506104876110fd565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104af57600080fd5b506104fc600480360360408110156104c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611114565b604051808215151515815260200191505060405180910390f35b34801561052257600080fd5b5061056f6004803603604081101561053957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c7565b604051808215151515815260200191505060405180910390f35b34801561059557600080fd5b506105d8600480360360208110156105ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611381565b6040518082815260200191505060405180910390f35b3480156105fa57600080fd5b506106036113ca565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610643578082015181840152602081019050610628565b50505050905090810190601f1680156106705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068a57600080fd5b506106cd600480360360208110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061146c565b005b3480156106db57600080fd5b506106e46114dd565b005b3480156106f257600080fd5b5061073f6004803603604081101561070957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114ef565b005b34801561074d57600080fd5b5061079a6004803603604081101561076457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a0565b604051808215151515815260200191505060405180910390f35b3480156107c057600080fd5b5061080d600480360360408110156107d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611753565b604051808215151515815260200191505060405180910390f35b34801561083357600080fd5b506108766004803603602081101561084a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611771565b604051808215151515815260200191505060405180910390f35b34801561089c57600080fd5b506108df600480360360208110156108b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061178e565b6040518082815260200191505060405180910390f35b34801561090157600080fd5b506109446004803603602081101561091857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118d3565b005b34801561095257600080fd5b5061095b6119dc565b6040518082815260200191505060405180910390f35b34801561097d57600080fd5b506109e06004803603604081101561099457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc8565b6040518082815260200191505060405180910390f35b348015610a0257600080fd5b50610bca600480360360e0811015610a1957600080fd5b8101908080359060200190640100000000811115610a3657600080fd5b820183602082011115610a4857600080fd5b80359060200191846001830284011164010000000083111715610a6a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610acd57600080fd5b820183602082011115610adf57600080fd5b80359060200191846001830284011164010000000083111715610b0157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4f565b005b348015610bd857600080fd5b50610dc16004803603610100811015610bf057600080fd5b8101908080359060200190640100000000811115610c0d57600080fd5b820183602082011115610c1f57600080fd5b80359060200191846001830284011164010000000083111715610c4157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ca457600080fd5b820183602082011115610cb657600080fd5b80359060200191846001830284011164010000000083111715610cd857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dbf565b005b610e0f60048036036040811015610dd957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f17565b604051808215151515815260200191505060405180910390f35b606060338054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b5050505050905090565b6000610edf610ed86121c8565b84846121d0565b6001905092915050565b600060019054906101000a900460ff1680610f085750610f0761232f565b5b80610f1f57506000809054906101000a900460ff16155b610f74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610fc4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8360339080519060200190610fda929190612f23565b508260349080519060200190610ff1929190612f23565b5081603560006101000a81548160ff021916908360ff160217905550801561102e5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000606a54905090565b600061104b848484612340565b6110f2846110576121c8565b6110ed85606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006110a46121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b6121d0565b600190509392505050565b6000603560009054906101000a900460ff16905090565b60006111bd6111216121c8565b846111b885606960006111326121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b6121d0565b6001905092915050565b60006111d96111d46121c8565b611771565b61122e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b61123883836125b3565b50600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113775761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347e7ef2484846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561133a57600080fd5b505af115801561134e573d6000803e3d6000fd5b505050506040513d602081101561136457600080fd5b8101908080519060200190929190505050505b6001905092915050565b6000606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060348054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114625780601f1061143757610100808354040283529160200191611462565b820191906000526020600020905b81548152906001019060200180831161144557829003601f168201915b5050505050905090565b61147c6114776121c8565b611771565b6114d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b6114da8161262e565b50565b6114ed6114e86121c8565b612688565b565b6114ff6114fa6121c8565b611771565b611554576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b61155e82826126e2565b600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461169c5761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c606627283836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561165f57600080fd5b505af1158015611673573d6000803e3d6000fd5b505050506040513d602081101561168957600080fd5b8101908080519060200190929190505050505b5050565b60006117496116ad6121c8565b8461174485606960006116be6121c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b6121d0565b6001905092915050565b60006117676117606121c8565b8484612340565b6001905092915050565b600061178782609d61283690919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117f057600090506118ce565b61010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561189057600080fd5b505afa1580156118a4573d6000803e3d6000fd5b505050506040513d60208110156118ba57600080fd5b810190808051906020019092919050505090505b919050565b600060019054906101000a900460ff16806118f257506118f161232f565b5b8061190957506000809054906101000a900460ff16155b61195e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156119ae576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6119b7826128c8565b80156119d85760008060016101000a81548160ff0219169083151502179055505b5050565b60006119e66129df565b6119f35760009050611bc5565b6000339050600061010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b86e321c836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611a9c57600080fd5b505af1158015611ab0573d6000803e3d6000fd5b505050506040513d6020811015611ac657600080fd5b8101908080519060200190929190505050905061010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b8357600080fd5b505af1158015611b97573d6000803e3d6000fd5b505050506040513d6020811015611bad57600080fd5b81019080805190602001909291905050505080925050505b90565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060019054906101000a900460ff1680611c6e5750611c6d61232f565b5b80611c8557506000809054906101000a900460ff16155b611cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d2a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d35888888610ee9565b611d3e856118d3565b8161010260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000831115611d9457611d938484612aaa565b5b8015611db55760008060016101000a81548160ff0219169083151502179055505b5050505050505050565b600060019054906101000a900460ff1680611dde5750611ddd61232f565b5b80611df557506000809054906101000a900460ff16155b611e4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e9a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611ea989898989898989611c4f565b8161010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015611f0c5760008060016101000a81548160ff0219169083151502179055505b505050505050505050565b6000803414611f2557600080fd5b611f2d6129df565b611f3a57600090506121c2565b6000821415611f4c57600090506121c2565b61010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561202a57600080fd5b505af115801561203e573d6000803e3d6000fd5b505050506040513d602081101561205457600080fd5b81019080805190602001909291905050506120d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4469766964656e64205472616e7366657246726f6d204661696c65642e00000081525060200191505060405180910390fd5b61010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb93210884846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561218157600080fd5b505af1158015612195573d6000803e3d6000fd5b505050506040513d60208110156121ab57600080fd5b810190808051906020019092919050505050600190505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561220a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561224457600080fd5b80606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600080303b90506000811491505090565b61234b838383612bfe565b600073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461256f5761010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c606627284836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561244c57600080fd5b505af1158015612460573d6000803e3d6000fd5b505050506040513d602081101561247657600080fd5b81019080805190602001909291905050505061010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166347e7ef2483836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561253257600080fd5b505af1158015612546573d6000803e3d6000fd5b505050506040513d602081101561255c57600080fd5b8101908080519060200190929190505050505b505050565b60008282111561258357600080fd5b600082840390508091505092915050565b6000808284019050838110156125a957600080fd5b8091505092915050565b60006125c56125c06121c8565b611771565b61261a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612fc96030913960400191505060405180910390fd5b6126248383612aaa565b6001905092915050565b61264281609d612dcc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61269c81609d612e7890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561271c57600080fd5b61273181606a5461257490919063ffffffff16565b606a8190555061278981606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561287157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600060019054906101000a900460ff16806128e757506128e661232f565b5b806128fe57506000809054906101000a900460ff16155b612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612ff9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156129a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6129ac82611771565b6129ba576129b98261262e565b5b80156129db5760008060016101000a81548160ff0219169083151502179055505b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661010260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a415760009050612aa7565b600073ffffffffffffffffffffffffffffffffffffffff1661010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612aa25760009050612aa7565b600190505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ae457600080fd5b612af981606a5461259490919063ffffffff16565b606a81905550612b5181606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c3857600080fd5b612c8a81606860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461257490919063ffffffff16565b606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612d1f81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461259490919063ffffffff16565b606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612e0657600080fd5b612e108282612836565b15612e1a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612eb257600080fd5b612ebc8282612836565b612ec557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f6457805160ff1916838001178555612f92565b82800160010185558215612f92579182015b82811115612f91578251825591602001919060010190612f76565b5b509050612f9f9190612fa3565b5090565b612fc591905b80821115612fc1576000816000905550600101612fa9565b5090565b9056fe4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72305820489ea2a63b8f41683243155679fe7acceb544bfc8e7eba9b1a92e1432b88ec1264736f6c634300050a0032",
    "compiler": {
        "name": "solc",
        "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang",
        "optimizer": { "enabled": false, "runs": 200 },
        "evmVersion": "constantinople"
    }
}
